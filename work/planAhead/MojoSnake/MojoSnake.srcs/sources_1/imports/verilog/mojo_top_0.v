/*
   This file was generated automatically by Alchitry Labs version 1.1.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [7:0] vga_r,
    output reg [7:0] vga_g,
    output reg [7:0] vga_b,
    output reg vga_hsync,
    output reg vga_vsync,
    output reg vga_blk,
    output reg vga_clk,
    input b_up_a,
    input b_down_a,
    input b_left_a,
    input b_right_a
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_clkgen_clk_50;
  wire [1-1:0] M_clkgen_clk_25;
  wire [1-1:0] M_clkgen_clk_10;
  clk_divider clkgen (
    .clk_in(clk),
    .clk_50(M_clkgen_clk_50),
    .clk_25(M_clkgen_clk_25),
    .clk_10(M_clkgen_clk_10)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(M_clkgen_clk_25),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_b_up_a_button_out;
  button_conditioner_2 b_up_a_button (
    .clk(M_clkgen_clk_25),
    .in(b_up_a),
    .out(M_b_up_a_button_out)
  );
  wire [1-1:0] M_b_down_a_button_out;
  button_conditioner_2 b_down_a_button (
    .clk(M_clkgen_clk_25),
    .in(b_down_a),
    .out(M_b_down_a_button_out)
  );
  wire [1-1:0] M_b_left_a_button_out;
  button_conditioner_2 b_left_a_button (
    .clk(M_clkgen_clk_25),
    .in(b_left_a),
    .out(M_b_left_a_button_out)
  );
  wire [1-1:0] M_b_right_a_button_out;
  button_conditioner_2 b_right_a_button (
    .clk(M_clkgen_clk_25),
    .in(b_right_a),
    .out(M_b_right_a_button_out)
  );
  wire [1-1:0] M_b_up_a_edge_out;
  edge_detector_3 b_up_a_edge (
    .clk(M_clkgen_clk_25),
    .in(M_b_up_a_button_out),
    .out(M_b_up_a_edge_out)
  );
  wire [1-1:0] M_b_down_a_edge_out;
  edge_detector_3 b_down_a_edge (
    .clk(M_clkgen_clk_25),
    .in(M_b_down_a_button_out),
    .out(M_b_down_a_edge_out)
  );
  wire [1-1:0] M_b_left_a_edge_out;
  edge_detector_3 b_left_a_edge (
    .clk(M_clkgen_clk_25),
    .in(M_b_left_a_button_out),
    .out(M_b_left_a_edge_out)
  );
  wire [1-1:0] M_b_right_a_edge_out;
  edge_detector_3 b_right_a_edge (
    .clk(M_clkgen_clk_25),
    .in(M_b_right_a_button_out),
    .out(M_b_right_a_edge_out)
  );
  
  wire [1-1:0] M_snake_vram_wr_en;
  wire [12-1:0] M_snake_vram_wr_addr;
  wire [16-1:0] M_snake_vram_wr_data;
  snake_main_4 snake (
    .rst(rst),
    .clk(M_clkgen_clk_25),
    .left_button(M_b_left_a_edge_out),
    .right_button(M_b_right_a_edge_out),
    .up_button(M_b_up_a_edge_out),
    .down_button(M_b_down_a_edge_out),
    .vram_wr_en(M_snake_vram_wr_en),
    .vram_wr_addr(M_snake_vram_wr_addr),
    .vram_wr_data(M_snake_vram_wr_data)
  );
  
  wire [8-1:0] M_vga_r;
  wire [8-1:0] M_vga_g;
  wire [8-1:0] M_vga_b;
  wire [1-1:0] M_vga_o_hs;
  wire [1-1:0] M_vga_o_vs;
  wire [1-1:0] M_vga_o_blk;
  wire [1-1:0] M_vga_o_clk;
  vga_cga_5 vga (
    .rst(rst),
    .clk(M_clkgen_clk_25),
    .wr_en(M_snake_vram_wr_en),
    .wr_addr(M_snake_vram_wr_addr),
    .wr_data(M_snake_vram_wr_data),
    .r(M_vga_r),
    .g(M_vga_g),
    .b(M_vga_b),
    .o_hs(M_vga_o_hs),
    .o_vs(M_vga_o_vs),
    .o_blk(M_vga_o_blk),
    .o_clk(M_vga_o_clk)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    vga_r = M_vga_r;
    vga_g = M_vga_g;
    vga_b = M_vga_b;
    vga_hsync = M_vga_o_hs;
    vga_vsync = M_vga_o_vs;
    vga_blk = M_vga_o_blk;
    vga_clk = M_vga_o_clk;
  end
endmodule
