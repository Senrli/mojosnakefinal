module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full

    output vga_r[8],          //input for the VGA R channel
    output vga_g[8],          //input for the VGA G channel
    output vga_b[8],          //input for the VGA B spi_channel
    output vga_hsync,         //output for the VGA horizontal sync signal
    output vga_vsync,        //output for the VGA vertical sync signal
    output vga_blk,            //output fro the vga blanking signal
    output vga_clk,
    
    input b_up_a,
    input b_down_a,
    input b_left_a,
    input b_right_a
    
  
  ) {
  
  sig rst;                  // reset signal
  
  clk_divider clkgen(
    .clk_in(clk)
    );
  


  

  
  .clk(clkgen.clk_25) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    
    button_conditioner b_up_a_button(.in(b_up_a));
    button_conditioner b_down_a_button(.in(b_down_a));  
    button_conditioner b_left_a_button(.in(b_left_a));
    button_conditioner b_right_a_button(.in(b_right_a));


    edge_detector b_up_a_edge(#RISE(1), #FALL(0),.in(b_up_a_button.out));
    edge_detector b_down_a_edge(#RISE(1), #FALL(0),.in(b_down_a_button.out));
    edge_detector b_left_a_edge(#RISE(1), #FALL(0),.in(b_left_a_button.out));
    edge_detector b_right_a_edge(#RISE(1), #FALL(0),.in(b_right_a_button.out));

    
    .rst(rst){

    }
  }

  snake_main snake(
    .rst(rst),
    .clk(clkgen.clk_25),
    .left_button(b_left_a_edge.out),
    .right_button(b_right_a_edge.out),
    .up_button(b_up_a_edge.out),
    .down_button(b_down_a_edge.out)
    );
  
  vga_cga vga (
      .rst(rst),
      .clk(clkgen.clk_25),
      .wr_en(snake.vram_wr_en),
      .wr_addr(snake.vram_wr_addr),
      .wr_data(snake.vram_wr_data)      
    );
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off
    spi_miso =bz;
    spi_channel = bzzzz;
    avr_rx = bz;

    vga_r =  vga.r;
    vga_g =  vga.g;
    vga_b =   vga.b;
    vga_hsync = vga.o_hs;
    vga_vsync = vga.o_vs; 
    vga_blk = vga.o_blk;
    vga_clk = vga.o_clk;
    
    
    
  }
}