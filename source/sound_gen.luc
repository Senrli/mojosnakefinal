module sound_gen (
    input clk,  // clock
    input rst,  // reset
    input sound_en, //output sound
    input sound_type[3], //type of sound output
    output sound_out[8]
    
  ) {

    .clk(clk){
      .rst(rst){
        dff counter[24];
        dff time_delay[24];
        dff sound_type_reg[3];
        dff sound_counter[25];
      }    
    }
  
  
  always {
    counter.d = counter.q + 1;
    if(sound_en){
      time_delay.d = 20x{b1}; 
      sound_type_reg.d = sound_type[2:0];
    }
    if(time_delay.q > 0){
      time_delay.d = time_delay.q - 1;
    }
    else if(time_delay.q == 0){
      counter.d = 0;
    }
    case(sound_type_reg.q){
        1:
          sound_out[7:0] = 8x{counter.q[14]};      //square wave
        2:
          sound_out[7:0] = counter.q[14:7];        //saw-tooth wave
        3:
          sound_out[7:0] = 8x{counter.q[14]}^counter.q[13:6]; //triangular wave
        4:
          sound_counter.d = sound_counter.q + 1;
          if(sound_counter.q < 25000000){
            if(sound_counter.q < 8333333){
              if(counter.q == 124999){
                counter.d = 0;
              }
            }
            else if(sound_counter.q < 16666666){
              if(counter.q == 62499){
                counter.d = 0;
              }
            }
            else if(sound_counter.q < 25000000){
              if(counter.q == 41665){
                counter.d = 0;
              }
            }
          }

          sound_out[7:0] = counter.q[14:7];        //saw-tooth wave

        5:
          sound_counter.d = sound_counter.q + 1;
          if(sound_counter.q < 25000000){
            if(sound_counter.q < 8333333){
              if(counter.q == 41665){
                counter.d = 0;
              }
            }
            else if(sound_counter.q < 16666666){
              if(counter.q == 62499){
                counter.d = 0;
              }
            }
            else if(sound_counter.q < 25000000){
              if(counter.q == 124999){
                counter.d = 0;
              }
            }
          }

          sound_out[7:0] = counter.q[14:7];        //saw-tooth wave
        default:
          sound_out[7:0] = 8x{counter.q[14]};      //square wave
      }
  }
}
